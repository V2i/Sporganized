name: Pylint

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.13"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pylint

      - name: Run pylint and capture score
        id: pylint
        run: |
          PYTHONPATH=. pylint scripts/ src/ || true
          grep "Your code has been rated at" pylint.log
          SCORE_LINE=$(grep "Your code has been rated at" pylint.log)
          echo "Pylint score line: $SCORE_LINE"
          SCORE=$(echo "$SCORE_LINE" | sed -n 's/.*rated at \([0-9.]*\)\/10.*/\1/p')
          echo "Extracted score: $SCORE"
          echo "score=$SCORE" >> $GITHUB_OUTPUT

      - name: Print pylint summary
        run: |
          echo "=== Pylint Summary ==="
          cat pylint.log

      - name: Upload full pylint log
        uses: actions/upload-artifact@v4
        with:
          name: pylint-full-log
          path: pylint.log

      - name: Evaluate pylint score
        run: |
          SCORE=${{ steps.pylint.outputs.score }}
          echo "Score from previous step: $SCORE"
          if (( $(echo "$SCORE < 8.5" | bc -l) )); then
            echo "❌ Pylint score too low: $SCORE"
            exit 1
          else
            echo "✅ Pylint passed with score: $SCORE"
            exit 0
          fi
